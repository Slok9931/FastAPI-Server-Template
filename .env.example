# =================================================================
# FastAPI Dynamic RBAC System - Environment Configuration Template
# =================================================================
# Copy this file to .env and update the values according to your setup

# =================
# Database Configuration
# =================
# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database_name
DATABASE_URL=your-database-url

# Database connection pool settings
DATABASE_POOL_SIZE=5
DATABASE_MAX_OVERFLOW=10
DATABASE_POOL_TIMEOUT=30
DATABASE_POOL_RECYCLE=3600

# =================
# Security Configuration
# =================
# IMPORTANT: Generate a strong secret key for production!
# You can generate one using: openssl rand -hex 32
SECRET_KEY=your-secret-key

# JWT settings
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# Password security requirements
PASSWORD_HASH_ROUNDS=12
PASSWORD_MIN_LENGTH=6
PASSWORD_REQUIRE_UPPERCASE=true
PASSWORD_REQUIRE_LOWERCASE=true
PASSWORD_REQUIRE_NUMBERS=true
PASSWORD_REQUIRE_SPECIAL_CHARS=true

# =================
# Application Configuration
# =================
# Environment: development, staging, production
ENVIRONMENT=development

# Debug mode (disable in production)
DEBUG=true

# Application metadata
APP_NAME=FastAPI Dynamic RBAC System
APP_VERSION=1.0.0
APP_DESCRIPTION=A secure FastAPI application with dynamic Role-Based Access Control
API_PREFIX=/api/v1
TIMEZONE=UTC

# =================
# Logging Configuration
# =================
LOG_LEVEL=INFO
LOG_FILE_PATH=logs/security.log
LOG_MAX_FILE_SIZE=10485760
LOG_BACKUP_COUNT=5
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# =================
# Rate Limiting Configuration
# =================
RATE_LIMIT_ENABLED=true

# Login rate limiting
RATE_LIMIT_LOGIN_MAX=5
RATE_LIMIT_LOGIN_WINDOW=900

# Registration rate limiting
RATE_LIMIT_REGISTER_MAX=3
RATE_LIMIT_REGISTER_WINDOW=3600

# API rate limiting
RATE_LIMIT_API_ANONYMOUS_MAX=100
RATE_LIMIT_API_ANONYMOUS_WINDOW=3600
RATE_LIMIT_API_AUTHENTICATED_MAX=1000
RATE_LIMIT_API_AUTHENTICATED_WINDOW=3600
RATE_LIMIT_API_ADMIN_MAX=2000
RATE_LIMIT_API_ADMIN_WINDOW=3600

# Rate limit cleanup interval
RATE_LIMIT_CLEANUP_INTERVAL=300

# =================
# CORS Configuration
# =================
# Allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:8080,http://127.0.0.1:3000

# CORS settings
CORS_ALLOW_CREDENTIALS=true
CORS_ALLOW_METHODS=GET,POST,PUT,DELETE,PATCH,OPTIONS
CORS_ALLOW_HEADERS=Authorization,Content-Type,X-Requested-With,Accept,Accept-Language,Content-Language
CORS_EXPOSE_HEADERS=X-RateLimit-Limit,X-RateLimit-Remaining,X-RateLimit-Reset,X-RateLimit-Window

# =================
# Security Headers Configuration
# =================
# Enable security headers (recommended for production)
SECURITY_HEADERS_ENABLED=false

# Security header values
X_CONTENT_TYPE_OPTIONS=nosniff
X_FRAME_OPTIONS=DENY
X_XSS_PROTECTION=1; mode=block
STRICT_TRANSPORT_SECURITY=max-age=31536000; includeSubDomains

# Content Security Policy (updated for Swagger UI compatibility)
CONTENT_SECURITY_POLICY=default-src 'self'; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:;

# Other security headers
REFERRER_POLICY=strict-origin-when-cross-origin
PERMISSIONS_POLICY=geolocation=(), microphone=(), camera=()

# =================
# API Documentation Configuration
# =================
# Enable/disable API documentation
DOCS_ENABLED=true

# Documentation URLs
DOCS_URL=/docs
REDOC_URL=/redoc
OPENAPI_URL=/openapi.json

# =================
# Pagination Configuration
# =================
DEFAULT_PAGE_SIZE=20
MAX_PAGE_SIZE=1000
DEFAULT_SKIP=0

# =================
# User Configuration
# =================
# Username requirements
USERNAME_MIN_LENGTH=3
USERNAME_MAX_LENGTH=50

# User features
EMAIL_VALIDATION_ENABLED=true
USER_REGISTRATION_ENABLED=true
ACCOUNT_ACTIVATION_REQUIRED=false

# =================
# Role Configuration
# =================
# System roles (DO NOT CHANGE in production)
DEFAULT_USER_ROLE=user
SUPER_ADMIN_ROLE=super_admin

# =================
# Session Configuration
# =================
SESSION_TIMEOUT_MINUTES=60
MAX_CONCURRENT_SESSIONS=5

# =================
# File Upload Configuration
# =================
# Maximum file size in bytes (5MB)
MAX_FILE_SIZE=5242880

# Allowed file extensions (comma-separated)
ALLOWED_FILE_TYPES=jpg,jpeg,png,pdf,doc,docx

# Upload directory
UPLOAD_DIRECTORY=uploads

# =================
# Email Configuration
# =================
# SMTP server settings (for future email features)
SMTP_HOST=localhost
SMTP_PORT=587
SMTP_USERNAME=your-username
SMTP_PASSWORD=your-password
SMTP_USE_TLS=true
EMAIL_FROM=your-email

# =================
# Redis Configuration
# =================
# Redis connection (for future caching features)
REDIS_URL=redis://localhost:6379/0
REDIS_POOL_SIZE=10

# =================
# Monitoring Configuration
# =================
# Feature flags
METRICS_ENABLED=false
HEALTH_CHECK_ENABLED=true
PERFORMANCE_MONITORING=false

# =================
# Development Configuration
# =================
# Development-specific settings
AUTO_RELOAD=true
WORKERS=1
HOST=0.0.0.0
PORT=8000

# =================
# Production Notes
# =================
# For production deployment:
# 1. Set ENVIRONMENT=production
# 2. Set DEBUG=false
# 3. Generate a strong SECRET_KEY
# 4. Use a secure database password
# 5. Enable SECURITY_HEADERS_ENABLED=true
# 6. Set DOCS_ENABLED=false
# 7. Configure proper CORS_ORIGINS
# 8. Set up SSL/TLS termination
# 9. Configure rate limiting appropriately
# 10. Set up proper logging and monitoring

# =================
# Docker Compose Override
# =================
# These values are used by docker-compose.yml
# PostgreSQL settings for Docker
POSTGRES_USER=your-user
POSTGRES_PASSWORD=your-password
POSTGRES_DB=your-db-name

# pgAdmin settings for Docker
PGADMIN_DEFAULT_EMAIL=admin@gmail.com
PGADMIN_DEFAULT_PASSWORD=admin123